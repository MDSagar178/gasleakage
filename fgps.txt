#include <Adafruit_Fingerprint.h>
#include <Servo.h>
#include <SoftwareSerial.h>

SoftwareSerial mySerial(D7, D6);  // RX, TX for fingerprint sensor
Adafruit_Fingerprint finger = Adafruit_Fingerprint(&mySerial);

Servo doorLockServo;
const int servoPin = D1;

void setup() {
  Serial.begin(115200);
  mySerial.begin(57600);

  if (finger.verifyPassword()) {
    Serial.println("Found fingerprint sensor!");
  } else {
    Serial.println("Did not find fingerprint sensor :(");
    while (1);
  }

  doorLockServo.attach(servoPin);
  doorLockServo.write(0);  // Initial position (locked)
}

void loop() {
  getFingerprint();

  delay(1000);  // Add a delay to prevent false positives
}

void getFingerprint() {
  uint8_t p = finger.getImage();
  switch (p) {
    case FINGERPRINT_OK:
      Serial.println("Image taken");
      break;
    case FINGERPRINT_NOFINGER:
      Serial.println("No finger detected");
      return;
    case FINGERPRINT_PACKETRECIEVEERR:
      Serial.println("Communication error");
      return;
    case FINGERPRINT_IMAGEFAIL:
      Serial.println("Imaging error");
      return;
    default:
      Serial.println("Unknown error");
      return;
  }

  p = finger.image2Tz();
  switch (p) {
    case FINGERPRINT_OK:
      Serial.println("Image converted");
      break;
    case FINGERPRINT_IMAGEMESS:
      Serial.println("Image too messy");
      return;
    case FINGERPRINT_PACKETRECIEVEERR:
      Serial.println("Communication error");
      return;
    case FINGERPRINT_FEATUREFAIL:
      Serial.println("Could not find fingerprint features");
      return;
    case FINGERPRINT_INVALIDIMAGE:
      Serial.println("Could not find fingerprint features");
      return;
    default:
      Serial.println("Unknown error");
      return;
  }

  p = finger.fingerFastSearch();
  if (p == FINGERPRINT_OK) {
    Serial.println("Found a match!");
    unlockDoor();
  } else if (p == FINGERPRINT_NOTFOUND) {
    Serial.println("No match found");
  } else {
    Serial.println("Unknown error");
  }
}

void unlockDoor() {
  Serial.println("Unlocking door");
  doorLockServo.write(90);  // Unlock position
  delay(2000);  // Keep the door unlocked for 2 seconds
  Serial.println("Locking door");
  doorLockServo.write(0);  // Lock position
}
Make sure to select the correct COM port and board type before uploading the code to your NodeMCU.





